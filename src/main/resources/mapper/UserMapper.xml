<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fightjc.xybot.dao.UserRepository">

    <select id="getUsersCount"
            parameterType="org.fightjc.xybot.model.dto.user.GetAllUserInput"
            resultType="integer">
        select count(*) from User
        <if test="filter != null and filter != ''">
            <where>
                Username like concat('%', #{filter}, '%')
            </where>
        </if>
    </select>

    <select id="getUsers"
            parameterType="org.fightjc.xybot.model.dto.user.GetAllUserInput"
            resultType="org.fightjc.xybot.model.dto.user.UserDto">
        select
            u.*, r.name as RoleName
        from
            User u
            inner join UserRole ur on ur.UserId = u.Id
            inner join Role r on r.Id = ur.RoleId
        <if test="filter != null and filter != ''">
            <where>
                u.Username like concat('%', #{filter}, '%')
            </where>
        </if>
        order by u.Username asc
        limit #{skipCount}, #{maxResultCount}
    </select>

    <select id="getUser"
            parameterType="String"
            resultType="org.fightjc.xybot.model.dto.user.UserDto">
        select
            u.*, r.name as RoleName
        from
            User u
            inner join UserRole ur on ur.UserId = u.Id
            inner join Role r on r.Id = ur.RoleId
        where
            u.Id = #{_parameter}
    </select>

    <select id="findByUsername"
            parameterType="String"
            resultType="org.fightjc.xybot.model.entity.User">
        select * from User where Username = #{_parameter}
    </select>

    <insert id="createUser"
            parameterType="org.fightjc.xybot.model.entity.User">
        insert into User (Username, Password, Name, Email, CreationTime, IsActive, DeletionTime)
        values (#{username}, #{password}, #{name}, #{email}, #{creationTime}, #{isActive}, #{deletionTime})
    </insert>

    <update id="updateUser"
            parameterType="org.fightjc.xybot.model.entity.User">
        update User
        set
            Name = #{name}, Email = #{email}, IsActive = #{isActive}
        where
            Id = #{id}
    </update>

</mapper>